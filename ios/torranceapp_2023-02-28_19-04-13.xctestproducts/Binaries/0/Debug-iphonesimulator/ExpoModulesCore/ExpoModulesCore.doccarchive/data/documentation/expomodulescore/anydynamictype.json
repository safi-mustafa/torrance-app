{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyDynamicType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CustomStringConvertible","preciseIdentifier":"s:s23CustomStringConvertibleP"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/expomodulescore\/anydynamictype"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/s23CustomStringConvertibleP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"identifier":{"url":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A protocol whose intention is to wrap any type"},{"type":"text","text":" "},{"type":"text","text":"to keep its real signature and not type-erase it by the compiler."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyDynamicType"}],"title":"AnyDynamicType","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:15ExpoModulesCore14AnyDynamicTypeP","modules":[{"name":"ExpoModulesCore"}],"navigatorTitle":[{"kind":"identifier","text":"AnyDynamicType"}]},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/cast(_:)","doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/equals(_:)","doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/wraps(_:)"]}],"references":{"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyDynamicType/cast(_:)":{"role":"symbol","title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ValueType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ValueType","preciseIdentifier":"s:15ExpoModulesCore14AnyDynamicTypeP4castyypqd__KlF05ValueF0L_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"Any"}],"abstract":[{"type":"text","text":"Casts given any value to the wrapped type and returns as "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"NOTE: It may not be just simple type-casting (e.g. when the wrapped type conforms to "},{"type":"codeVoice","code":"Convertible"},{"type":"text","text":")."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/cast(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/expomodulescore\/anydynamictype\/cast(_:)"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyDynamicType":{"role":"symbol","title":"AnyDynamicType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyDynamicType"}],"abstract":[{"type":"text","text":"A protocol whose intention is to wrap any type"},{"type":"text","text":" "},{"type":"text","text":"to keep its real signature and not type-erase it by the compiler."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyDynamicType"}],"url":"\/documentation\/expomodulescore\/anydynamictype"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyDynamicType/equals(_:)":{"role":"symbol","title":"equals(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equals"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyDynamicType","preciseIdentifier":"s:15ExpoModulesCore14AnyDynamicTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether the dynamic type is equal to another,"},{"type":"text","text":" "},{"type":"text","text":"that is when the type of the dynamic types are equal and their inner types are equal."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/equals(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/expomodulescore\/anydynamictype\/equals(_:)"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore":{"role":"collection","title":"ExpoModulesCore","abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore","kind":"symbol","type":"topic","url":"\/documentation\/expomodulescore"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyDynamicType/wraps(_:)":{"role":"symbol","title":"wraps(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wraps"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InnerType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"InnerType","preciseIdentifier":"s:15ExpoModulesCore14AnyDynamicTypeP5wrapsySbqd__mlF05InnerF0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether the inner type is the same as the given type."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDynamicType\/wraps(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/expomodulescore\/anydynamictype\/wraps(_:)"},"doc://org.cocoapods.ExpoModulesCore/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/s23CustomStringConvertibleP"}}}