{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Convertible"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyArgument","preciseIdentifier":"s:15ExpoModulesCore11AnyArgumentP","text":"AnyArgument"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/expomodulescore\/convertible"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyArgument"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Record"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Either","doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/EitherOfFour","doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/EitherOfThree"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Convertible","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A protocol that allows custom classes or structs to be used as function arguments."},{"type":"text","text":" "},{"type":"text","text":"It requires static "},{"type":"codeVoice","code":"convert(from:)"},{"type":"text","text":" function that knows how to convert incoming"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type to the type implemented by this protocol. It should throw an error"},{"type":"text","text":" "},{"type":"text","text":"when the value is not recognized, is invalid or doesn’t meet type requirements."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Convertible"}],"title":"Convertible","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:15ExpoModulesCore11ConvertibleP","modules":[{"name":"ExpoModulesCore"}],"navigatorTitle":[{"kind":"identifier","text":"Convertible"}]},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore"]]},"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Convertible\/convert(from:)"]}],"references":{"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/Record":{"role":"symbol","title":"Record","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"abstract":[{"type":"text","text":"A protocol that allows initializing the object with a dictionary."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Record","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Record"}],"url":"\/documentation\/expomodulescore\/record"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore":{"role":"collection","title":"ExpoModulesCore","abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore","kind":"symbol","type":"topic","url":"\/documentation\/expomodulescore"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/EitherOfThree":{"role":"symbol","title":"EitherOfThree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherOfThree"}],"abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/EitherOfThree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EitherOfThree"}],"url":"\/documentation\/expomodulescore\/eitherofthree"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/Convertible/convert(from:)":{"defaultImplementations":1,"role":"symbol","title":"convert(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Converts any value to the instance of its class (or struct)."},{"type":"text","text":" "},{"type":"text","text":"Throws an error when given value cannot be converted."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Convertible\/convert(from:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/expomodulescore\/convertible\/convert(from:)"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/EitherOfFour":{"role":"symbol","title":"EitherOfFour","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherOfFour"}],"abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/EitherOfFour","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EitherOfFour"}],"url":"\/documentation\/expomodulescore\/eitheroffour"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/Convertible":{"role":"symbol","title":"Convertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Convertible"}],"abstract":[{"type":"text","text":"A protocol that allows custom classes or structs to be used as function arguments."},{"type":"text","text":" "},{"type":"text","text":"It requires static "},{"type":"codeVoice","code":"convert(from:)"},{"type":"text","text":" function that knows how to convert incoming"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type to the type implemented by this protocol. It should throw an error"},{"type":"text","text":" "},{"type":"text","text":"when the value is not recognized, is invalid or doesn’t meet type requirements."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Convertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Convertible"}],"url":"\/documentation\/expomodulescore\/convertible"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/Either":{"role":"symbol","title":"Either","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Either"}],"abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/Either","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Either"}],"url":"\/documentation\/expomodulescore\/either"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyArgument":{"role":"symbol","title":"AnyArgument","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyArgument"}],"abstract":[{"type":"text","text":"A protocol for classes\/structs accepted as an argument of functions."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyArgument","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyArgument"}],"url":"\/documentation\/expomodulescore\/anyargument"}}}