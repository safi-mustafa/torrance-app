{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConcurrentFunctionDefinition"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Args"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"FirstArgType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/expomodulescore\/concurrentfunctiondefinition"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDefinition"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/ConcurrentFunctionDefinition","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a concurrent function that can only be called asynchronously, thus its JavaScript equivalent returns a Promise."},{"type":"text","text":" "},{"type":"text","text":"As opposed to "},{"type":"codeVoice","code":"AsyncFunctionComponent"},{"type":"text","text":", it can leverage the new Swift’s concurrency model and take the async\/await closure."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConcurrentFunctionDefinition"}],"title":"ConcurrentFunctionDefinition","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:15ExpoModulesCore28ConcurrentFunctionDefinitionC","modules":[{"name":"ExpoModulesCore"}],"navigatorTitle":[{"kind":"identifier","text":"ConcurrentFunctionDefinition"}]},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore"]]},"references":{"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/AnyDefinition":{"role":"symbol","title":"AnyDefinition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyDefinition"}],"abstract":[{"type":"text","text":"A protocol that must be implemented to be a part of module’s definition and the module definition itself."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/AnyDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyDefinition"}],"url":"\/documentation\/expomodulescore\/anydefinition"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore/ConcurrentFunctionDefinition":{"role":"symbol","title":"ConcurrentFunctionDefinition","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConcurrentFunctionDefinition"}],"abstract":[{"type":"text","text":"Represents a concurrent function that can only be called asynchronously, thus its JavaScript equivalent returns a Promise."},{"type":"text","text":" "},{"type":"text","text":"As opposed to "},{"type":"codeVoice","code":"AsyncFunctionComponent"},{"type":"text","text":", it can leverage the new Swift’s concurrency model and take the async\/await closure."}],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore\/ConcurrentFunctionDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConcurrentFunctionDefinition"}],"url":"\/documentation\/expomodulescore\/concurrentfunctiondefinition"},"doc://org.cocoapods.ExpoModulesCore/documentation/ExpoModulesCore":{"role":"collection","title":"ExpoModulesCore","abstract":[],"identifier":"doc:\/\/org.cocoapods.ExpoModulesCore\/documentation\/ExpoModulesCore","kind":"symbol","type":"topic","url":"\/documentation\/expomodulescore"}}}