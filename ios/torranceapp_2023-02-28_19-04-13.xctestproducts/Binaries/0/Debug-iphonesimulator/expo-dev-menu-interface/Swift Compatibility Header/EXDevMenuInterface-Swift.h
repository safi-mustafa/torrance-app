#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef EXDEVMENUINTERFACE_SWIFT_H
#define EXDEVMENUINTERFACE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EXDevMenuInterface",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class DevMenuExportedCallable;

SWIFT_PROTOCOL("_TtP18EXDevMenuInterface23DevMenuCallableProvider_")
@protocol DevMenuCallableProvider
@optional
- (DevMenuExportedCallable * _Nullable)registerCallable SWIFT_WARN_UNUSED_RESULT;
@end

enum DevMenuItemType : NSInteger;
@class NSString;

SWIFT_CLASS("_TtC18EXDevMenuInterface11DevMenuItem")
@interface DevMenuItem : NSObject
@property (nonatomic, readonly) enum DevMenuItemType type;
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DevMenuItemType, "ItemType", closed) {
  DevMenuItemTypeAction = 1,
  DevMenuItemTypeGroup = 2,
  DevMenuItemTypeScreen = 3,
  DevMenuItemTypeLink = 4,
  DevMenuItemTypeSelectionList = 5,
};


SWIFT_CLASS("_TtC18EXDevMenuInterface17DevMenuScreenItem")
@interface DevMenuScreenItem : DevMenuItem
@property (nonatomic) NSInteger importance;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DevMenuItemImportance, "ItemImportance", closed) {
  DevMenuItemImportanceLowest = -200,
  DevMenuItemImportanceLow = -100,
  DevMenuItemImportanceMedium = 0,
  DevMenuItemImportanceHigh = 100,
  DevMenuItemImportanceHighest = 200,
};

@class DevMenuExportedAction;

SWIFT_CLASS("_TtC18EXDevMenuInterface13DevMenuAction")
@interface DevMenuAction : DevMenuScreenItem <DevMenuCallableProvider>
@property (nonatomic, strong) DevMenuExportedAction * _Nonnull callable;
@property (nonatomic, copy) void (^ _Nonnull action)(void);
@property (nonatomic, copy) BOOL (^ _Nonnull isAvailable)(void);
@property (nonatomic, copy) BOOL (^ _Nonnull isEnabled)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull label)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull detail)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull glyphName)(void);
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id action:(void (^ _Nonnull)(void))action;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id :(void (^ _Nonnull)(void))action;
- (DevMenuExportedCallable * _Nullable)registerCallable SWIFT_WARN_UNUSED_RESULT;
- (void)registerKeyCommandWithInput:(NSString * _Nonnull)input modifiers:(UIKeyModifierFlags)modifiers;
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
@end

@class Protocol;

SWIFT_PROTOCOL("_TtP18EXDevMenuInterface21DevMenuBridgeProtocol_")
@protocol DevMenuBridgeProtocol
@optional
- (id _Nullable)moduleForName:(NSString * _Nonnull)forName SWIFT_WARN_UNUSED_RESULT;
- (NSArray * _Nonnull)modulesConformingToProtocol:(Protocol * _Nonnull)toProtocol SWIFT_WARN_UNUSED_RESULT;
- (void)requestReload;
@end



SWIFT_PROTOCOL("_TtP18EXDevMenuInterface21DevMenuDataSourceItem_")
@protocol DevMenuDataSourceItem
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface25DevMenuDataSourceProtocol_")
@protocol DevMenuDataSourceProtocol
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (void)fetchDataWithResolve:(void (^ _Nonnull)(NSArray<id <DevMenuDataSourceItem>> * _Nonnull))resolve;
@end


SWIFT_CLASS("_TtC18EXDevMenuInterface23DevMenuExportedCallable")
@interface DevMenuExportedCallable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIKeyCommand;

SWIFT_CLASS("_TtC18EXDevMenuInterface21DevMenuExportedAction")
@interface DevMenuExportedAction : DevMenuExportedCallable
@property (nonatomic, copy) void (^ _Nonnull action)(void);
@property (nonatomic, readonly, strong) UIKeyCommand * _Nullable keyCommand;
@property (nonatomic, copy) BOOL (^ _Nonnull isAvailable)(void);
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id withAction:(void (^ _Nonnull)(void))action OBJC_DESIGNATED_INITIALIZER;
- (void)registerKeyCommandWithInput:(NSString * _Nonnull)input modifiers:(UIKeyModifierFlags)modifiers;
@end



SWIFT_CLASS("_TtC18EXDevMenuInterface23DevMenuExportedFunction")
@interface DevMenuExportedFunction : DevMenuExportedCallable
@property (nonatomic, copy) void (^ _Nonnull function)(NSDictionary<NSString *, id> * _Nullable);
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id withFunction:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable))function OBJC_DESIGNATED_INITIALIZER;
@end

@protocol DevMenuExtensionSettingsProtocol;
@protocol DevMenuItemsContainerProtocol;
@class DevMenuScreen;

/// A protocol for React Native bridge modules that want to provide their own dev menu actions.
SWIFT_PROTOCOL("_TtP18EXDevMenuInterface24DevMenuExtensionProtocol_")
@protocol DevMenuExtensionProtocol
@optional
/// Returns a name of the module and the extension. Required by <code>RCTBridgeModule</code>.
/// This function is optional because otherwise we end up with linker warning:
/// <code>method '+moduleName' in category from /.../expo-dev-menu/libexpo-dev-menu.a(DevMenuExtensions-....o) overrides method from class in /.../expo-dev-menu/libexpo-dev-menu.a(DevMenuExtensions-....o</code>
/// So we assume that this method will be implemented by <code>RCTBridgeModule</code>.
/// In theory we can remove it. However, we leave it  to get easy access to the module name.
+ (NSString * _Null_unspecified)moduleName SWIFT_WARN_UNUSED_RESULT;
/// Returns an array of the dev menu items to show.
/// It’s called only once for the extension instance — results are being cached on first dev menu launch.
- (id <DevMenuItemsContainerProtocol> _Nullable)devMenuItems:(id <DevMenuExtensionSettingsProtocol> _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
- (NSArray<DevMenuScreen *> * _Nullable)devMenuScreens:(id <DevMenuExtensionSettingsProtocol> _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <DevMenuDataSourceProtocol>> * _Nullable)devMenuDataSources:(id <DevMenuExtensionSettingsProtocol> _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface32DevMenuExtensionSettingsProtocol_")
@protocol DevMenuExtensionSettingsProtocol
- (BOOL)wasRunOnDevelopmentBridge SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface29DevMenuItemsContainerProtocol_")
@protocol DevMenuItemsContainerProtocol
- (NSArray<DevMenuScreenItem *> * _Nonnull)getRootItems SWIFT_WARN_UNUSED_RESULT;
- (NSArray<DevMenuScreenItem *> * _Nonnull)getAllItems SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18EXDevMenuInterface12DevMenuGroup")
@interface DevMenuGroup : DevMenuScreenItem <DevMenuItemsContainerProtocol>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (nonnull instancetype)new;
- (void)addItem:(DevMenuScreenItem * _Nonnull)item;
- (NSArray<DevMenuScreenItem *> * _Nonnull)getRootItems SWIFT_WARN_UNUSED_RESULT;
- (NSArray<DevMenuScreenItem *> * _Nonnull)getAllItems SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC18EXDevMenuInterface21DevMenuItemsContainer")
@interface DevMenuItemsContainer : NSObject <DevMenuItemsContainerProtocol>
- (NSArray<DevMenuScreenItem *> * _Nonnull)getRootItems SWIFT_WARN_UNUSED_RESULT;
- (NSArray<DevMenuScreenItem *> * _Nonnull)getAllItems SWIFT_WARN_UNUSED_RESULT;
- (void)addItem:(DevMenuScreenItem * _Nonnull)item;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC18EXDevMenuInterface11DevMenuLink")
@interface DevMenuLink : DevMenuScreenItem
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull label)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull glyphName)(void);
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18EXDevMenuInterface21DevMenuListDataSource")
@interface DevMenuListDataSource : NSObject <DevMenuDataSourceProtocol>
@property (nonatomic, copy) NSString * _Nonnull id;
- (void)fetchDataWithResolve:(void (^ _Nonnull)(NSArray<id <DevMenuDataSourceItem>> * _Nonnull))resolve;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface22DevMenuManagerProtocol_")
@protocol DevMenuManagerProtocol
/// Whether the dev menu window is visible on the device screen.
@property (nonatomic, readonly) BOOL isVisible;
/// Opens up the dev menu.
- (BOOL)openMenu:(NSString * _Nullable)screen;
- (BOOL)openMenu;
/// Sends an event to JS to start collapsing the dev menu bottom sheet.
- (BOOL)closeMenu;
/// Forces the dev menu to hide. Called by JS once collapsing the bottom sheet finishes.
- (BOOL)hideMenu;
/// Toggles the visibility of the dev menu.
- (BOOL)toggleMenu;
@end


SWIFT_CLASS("_TtC18EXDevMenuInterface13DevMenuScreen")
@interface DevMenuScreen : DevMenuItem <DevMenuItemsContainerProtocol>
- (NSArray<DevMenuScreenItem *> * _Nonnull)getRootItems SWIFT_WARN_UNUSED_RESULT;
- (NSArray<DevMenuScreenItem *> * _Nonnull)getAllItems SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
@end


@class Item;

SWIFT_CLASS("_TtC18EXDevMenuInterface20DevMenuSelectionList")
@interface DevMenuSelectionList : DevMenuScreenItem <DevMenuCallableProvider>
- (void)addItem:(Item * _Nonnull)item;
- (nonnull instancetype)init;
+ (nonnull instancetype)new;
- (nonnull instancetype)initWithDataSourceId:(NSString * _Nullable)dataSourceId OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
- (void)addOnClickWithHander:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable))hander;
- (DevMenuExportedCallable * _Nullable)registerCallable SWIFT_WARN_UNUSED_RESULT;
@end

@class Tag;

SWIFT_CLASS("_TtCC18EXDevMenuInterface20DevMenuSelectionList4Item")
@interface Item : NSObject <DevMenuDataSourceItem>
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable (^ _Nonnull onClickData)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull title)(void);
@property (nonatomic, copy) NSString * _Nullable (^ _Nonnull warning)(void);
@property (nonatomic, copy) BOOL (^ _Nonnull isChecked)(void);
@property (nonatomic, copy) NSArray<Tag *> * _Nonnull (^ _Nonnull tags)(void);
- (NSDictionary<NSString *, id> * _Nonnull)serialize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCCC18EXDevMenuInterface20DevMenuSelectionList4Item3Tag")
@interface Tag : NSObject
@property (nonatomic, copy) NSString * _Nonnull (^ _Nonnull text)(void);
@property (nonatomic, copy) NSString * _Nullable (^ _Nonnull glyphName)(void);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface35DevMenuUIResponderExtensionProtocol_")
@protocol DevMenuUIResponderExtensionProtocol
- (void)EXDevMenu_handleKeyCommand:(UIKeyCommand * _Nonnull)key;
@end


SWIFT_PROTOCOL("_TtP18EXDevMenuInterface22EXDevExtensionProtocol_")
@protocol EXDevExtensionProtocol
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
