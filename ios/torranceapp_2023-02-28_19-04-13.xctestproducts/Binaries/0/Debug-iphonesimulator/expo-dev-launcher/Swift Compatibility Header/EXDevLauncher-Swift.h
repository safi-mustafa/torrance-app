#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef EXDEVLAUNCHER_SWIFT_H
#define EXDEVLAUNCHER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ExpoModulesCore;
@import Foundation;
@import ObjectiveC;
@import React;
@import UIKit;
#endif

#import <EXDevLauncher/EXDevLauncher.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EXDevLauncher",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class RCTJSStackFrame;

SWIFT_CLASS("_TtC13EXDevLauncher21EXDevLauncherAppError")
@interface EXDevLauncherAppError : NSObject
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message stack:(NSArray<RCTJSStackFrame *> * _Nullable)stack OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13EXDevLauncher41EXDevLauncherBundleURLProviderInterceptor")
@interface EXDevLauncherBundleURLProviderInterceptor : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isInstalled;)
+ (BOOL)isInstalled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsInstalled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher26EXDevLauncherErrorInstance")
@interface EXDevLauncherErrorInstance : NSObject
@property (nonatomic, readonly) int64_t timestamp;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSString * _Nonnull stack;
- (NSDictionary<NSString *, id> * _Nonnull)toDict SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EXDevLauncherController;

SWIFT_CLASS("_TtC13EXDevLauncher25EXDevLauncherErrorManager")
@interface EXDevLauncherErrorManager : NSObject
- (nonnull instancetype)initWithController:(EXDevLauncherController * _Nonnull)controller OBJC_DESIGNATED_INITIALIZER;
- (EXDevLauncherAppError * _Nonnull)consumeError SWIFT_WARN_UNUSED_RESULT;
- (void)showError:(EXDevLauncherAppError * _Nonnull)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSException;

SWIFT_CLASS("_TtC13EXDevLauncher26EXDevLauncherErrorRegistry")
@interface EXDevLauncherErrorRegistry : NSObject
- (void)storeException:(NSException * _Nonnull)exception;
- (EXDevLauncherErrorInstance * _Nullable)consumeException SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;
@class UITableViewCell;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC13EXDevLauncher32EXDevLauncherErrorViewController")
@interface EXDevLauncherErrorViewController : UIViewController <UITableViewDataSource>
- (void)viewDidLoad;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
+ (EXDevLauncherErrorViewController * _Nullable)createForManager:(EXDevLauncherErrorManager * _Nonnull)manager SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher33EXDevLauncherInstallationIDHelper")
@interface EXDevLauncherInstallationIDHelper : NSObject
- (NSString * _Nonnull)getOrCreateInstallationID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

SWIFT_CLASS("_TtC13EXDevLauncher27EXDevLauncherManifestHelper")
@interface EXDevLauncherManifestHelper : NSObject
+ (UIInterfaceOrientation)exportManifestOrientation:(NSString * _Nullable)orientation SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nullable)hexStringToColor:(NSString * _Nullable)hexString SWIFT_WARN_UNUSED_RESULT;
+ (UIUserInterfaceStyle)exportManifestUserInterfaceStyle:(NSString * _Nullable)userInterfaceStyle SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@protocol EXDevLauncherPendingDeepLinkListener;

SWIFT_CLASS("_TtC13EXDevLauncher36EXDevLauncherPendingDeepLinkRegistry")
@interface EXDevLauncherPendingDeepLinkRegistry : NSObject
@property (nonatomic, copy) NSURL * _Nullable pendingDeepLink;
- (void)subscribe:(id <EXDevLauncherPendingDeepLinkListener> _Nonnull)listener;
- (void)unsubscribe:(id <EXDevLauncherPendingDeepLinkListener> _Nonnull)listener;
- (NSURL * _Nullable)consumePendingDeepLink SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol EXManifestsManifestBehavior;

SWIFT_CLASS_NAMED("EXDevLauncherRecentlyOpenedAppsRegistry")
@interface EXDevLauncherRecentlyOpenedAppsRegistry : NSObject
- (void)appWasOpened:(NSString * _Nonnull)url queryParams:(NSDictionary<NSString *, NSString *> * _Nonnull)queryParams manifest:(id <EXManifestsManifestBehavior> _Nullable)manifest;
- (NSArray<NSDictionary<NSString *, id> *> * _Nonnull)recentlyOpenedApps SWIFT_WARN_UNUSED_RESULT;
- (void)clearRegistry;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher30EXDevLauncherRedBoxInterceptor")
@interface EXDevLauncherRedBoxInterceptor : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isInstalled;)
+ (BOOL)isInstalled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsInstalled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher22EXDevLauncherURLHelper")
@interface EXDevLauncherURLHelper : NSObject
+ (BOOL)isDevLauncherURL:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasUrlQueryParam:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
+ (void)disableOnboardingPopupIfNeeded:(NSURL * _Nonnull)url;
+ (NSURL * _Nonnull)replaceEXPScheme:(NSURL * _Nonnull)url to:(NSString * _Nonnull)scheme SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, NSString *> * _Nonnull)getQueryParamsForUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher37EXDevLauncherUncaughtExceptionHandler")
@interface EXDevLauncherUncaughtExceptionHandler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isInstalled;)
+ (BOOL)isInstalled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsInstalled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13EXDevLauncher16EXDevLauncherUrl")
@interface EXDevLauncherUrl : NSObject
@property (nonatomic, copy) NSURL * _Nonnull url;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull queryParams;
- (nonnull instancetype)init:(NSURL * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIApplication;

SWIFT_CLASS("_TtC13EXDevLauncher36ExpoDevLauncherAppDelegateSubscriber")
@interface ExpoDevLauncherAppDelegateSubscriber : EXBaseAppDelegateSubscriber <EXAppDelegateSubscriberProtocol>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ExpoReactDelegate;
@class RCTBridge;
@class RCTRootView;

SWIFT_CLASS("_TtC13EXDevLauncher35ExpoDevLauncherReactDelegateHandler")
@interface ExpoDevLauncherReactDelegateHandler : ExpoReactDelegateHandler <EXDevLauncherControllerDelegate, RCTBridgeDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enableAutoSetup;)
+ (BOOL)enableAutoSetup SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnableAutoSetup:(BOOL)value;
- (RCTBridge * _Nullable)createBridgeWithReactDelegate:(ExpoReactDelegate * _Nonnull)reactDelegate bridgeDelegate:(id <RCTBridgeDelegate> _Nonnull)bridgeDelegate launchOptions:(NSDictionary * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (RCTRootView * _Nullable)createRootViewWithReactDelegate:(ExpoReactDelegate * _Nonnull)reactDelegate bridge:(RCTBridge * _Nonnull)bridge moduleName:(NSString * _Nonnull)moduleName initialProperties:(NSDictionary * _Nullable)initialProperties SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Null_unspecified)sourceURLForBridge:(RCTBridge * _Null_unspecified)bridge SWIFT_WARN_UNUSED_RESULT;
- (void)devLauncherController:(EXDevLauncherController * _Nonnull)developmentClientController didStartWithSuccess:(BOOL)success;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
